#!/m1/shared/bin/perl

use strict;
use warnings;

use Getopt::Std;

my %opt;
getopts('tl:r', \%opt);

chdir '/var/local/vncip' or die;

if ($opt{t}) {
    open STDIN, '<', 'log/traindb.log' or die;
}
elsif ($opt{l}) {
    $opt{l} =~ s/(?:\.log)?$/.log/;
    open STDIN, '<', "log/$opt{l}" or die;
}
elsif ($ENV{'NCIP_TARGET'}) {
    open STDIN, '<', "log/$ENV{'NCIP_TARGET'}.log" or die;
}
else {
    my ($log) = map { m{log/([^/]+db).log$} && $1 ne 'traindb' ? ("log/$1.log") : () } glob('log/*db.log');
    open STDIN, '<', $log or die;
}

my $type = $opt{r} ? 'response' : 'request';

exit usage() if @ARGV > 1;
@ARGV = (-1) if !@ARGV;

my ($n) = @ARGV;

$/ = '';

while (<STDIN>) {
    next if $. != $n;
    my ($date, $ipaddr);
    my ($req, $res) = split /\n::: WORKING\n/;
    my $xml = '';
    $_ = $opt{r} ? $res : $req;
    foreach (split /\n/) {
        if (/^(?:\(\(|\)\)) (.+) (\S+)$/) {
            ($date, $ipaddr) = ($1, $2);
        }
        elsif (s/^\|   //) {
            $xml .= $_;
            $xml .= "\n";
        }
    }
    next if !length $xml;
    my ($xmldecl, $etc) = split /\n/, $xml, 2;
    print $xmldecl, "\n", "<!-- $type $. [$ipaddr] $date -->\n", $etc, "\n";
    last;
}
